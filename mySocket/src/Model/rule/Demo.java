package Model.rule;

/**
 * 面试想对象设计原则
 * 单一职责：（高类聚，低耦合）一个类只有一个职责，对外只提供一个功能
 * 开闭原则：对扩展开放，对修改关闭（抽象和多态）
 * 里式替换：任何父类出现的地方都可以用他的子类来替换
 * 依赖注入：依赖于抽象类而不是具体实现，（使用抽象类或接口编程）
 * 接口分离：一个借口应该只提供一种对外功能
 * 迪米特原则：降低耦合，各模块之间使用接口编程不理会具体实现
 * @author lz130
 */
public class Demo {
}
